<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.interest.dao.UserDao">
	<resultMap id="userMap" type="com.interest.model.entity.UserEntity">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="login_name" property="loginName" />
		<result column="password" property="password" />
		<result column="email" property="email" />
		<result column="usertype" property="usertype" />
		<result column="headimg" property="headimg" />
		<result column="url" property="url" />
		<result column="create_time" property="createTime" />
		<result column="githubid" property="githubid" />
		<result column="qqid" property="qqid" />
	</resultMap>
	<!-- 获取user列表 -->
	<select id="usersList" resultMap="userMap">
	<![CDATA[select * from sys_user]]>
		<where>
			<if test="name != null and name != ''">
				name = #{name}
			</if>
		</where>
	    <![CDATA[ order by id desc ]]>
		<if test="pageSize != null and start != null ">
			limit #{start},#{pageSize}
		</if>
	</select>
	<!-- 获取user列表的总量 -->
	<select id="usersSize" resultType="Integer">  
	    <![CDATA[select count(*) from sys_user]]>
		<where>
			<if test="name != null and name != ''">
				name = #{name}
			</if>
		</where>
	</select>
	<insert id="insert">
		<if test="userEntity != null">
			insert into sys_user (name,login_name,password,email,usertype,headimg,url) values
			(#{userEntity.name},#{userEntity.loginName},#{userEntity.password},#{userEntity.email},#{userEntity.usertype},#{userEntity.headimg},#{userEntity.url})
		</if>
	</insert>
	<delete id="del">
		delete from sys_user
		<where>
			<if test="userEntity.id != null and userEntity.id != ''">id = #{userEntity.id}</if>
			<if test="userEntity.name != null and userEntity.name != ''">and name = #{userEntity.name}</if>
		</where>
	</delete>
	<update id="update">
		update sys_user set name = #{name},password = #{password},email = #{email}
		<where>
			id = #{id}
		</where>
	</update>
	<select id="select">
		select * from sys_user
		<where>
			<if test="id != null">id = #{id}</if>
			<if test="name != null">and name = #{name}</if>
			<if test="login_name != null">and login_name = #{loginName}</if>
		</where>
	</select>
	<select id="getUserEntityByLoginName" resultMap="userMap">
		select * from sys_user
		<where>
			login_name = #{loginName}
		</where>
	</select>
	<!-- 新建用户信息 -->
	<insert id="insertUser" parameterType="UserEntity">
		<selectKey keyProperty="id" resultType="java.lang.Integer"
				   order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
		insert into sys_user (name,email,usertype,headimg,url,create_time,githubid)
		values
		(#{name},#{email},#{usertype},#{headimg},#{url},#{createTime},#{githubid})
	</insert>
	<!-- 更新用户信息 -->
	<update id="updateUser" parameterType="UserEntity">
		update sys_user set
		name = #{name},
		password = #{password},
		college = #{college},
		info = #{info}
		<where>
			login_name = #{loginName}
		</where>
	</update>
	<update id="updateUsertype">
		update sys_user set
		usertype = #{usertype}
		<where>
			login_name = #{loginName}
		</where>
	</update>

	<update id="updateUsertypeById">
		update sys_user set
		usertype = #{usertype}
		<where>
			id = #{id}
		</where>
	</update>
	<!-- 删除用户信息 -->
	<delete id="deleteUsers">
		delete from sys_user
		<where>
			<if test="groupId !=null">
				id in
				<foreach collection="groupId" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</delete>
	<select id="getUserEntityById" resultMap="userMap">
		SELECT * FROM sys_user
		<where>
			id = #{id}
		</where>
	</select>

	<select id="getEntityByGithubid" resultMap="userMap">
		select * from sys_user
		<where>
			githubid = #{githubid}
		</where>
	</select>

	<select id="getEntityByQqid" resultMap="userMap">
		select * from sys_user
		<where>
			qqid = #{qqid}
		</where>
	</select>

	<insert id="insertUserByQq" parameterType="UserEntity">
		<selectKey keyProperty="id" resultType="java.lang.Integer"
				   order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
		insert into sys_user (name,usertype,headimg,create_time,qqid)
		values
		(#{name},#{usertype},#{headimg},#{createTime},#{qqid})
	</insert>

    <select id="getALl" resultMap="userMap">
        select * from sys_user
    </select>

</mapper>